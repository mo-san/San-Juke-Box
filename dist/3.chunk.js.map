{"version":3,"file":"3.chunk.js","mappings":"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","sources":["webpack://san-juke-box/./src/components-react/Info.tsx","webpack://san-juke-box/./src/components-react/ToggleSwitch.tsx"],"sourcesContent":["import React, { useState, lazy, Suspense } from \"react\";\n/** @jsx jsx */\n// noinspection ES6UnusedImports\nimport { jsx, css } from \"@emotion/react\";\nimport { IoMdSettings } from \"react-icons/io\";\nimport { MdLanguage, MdHelpOutline } from \"react-icons/md\";\nimport { locales } from \"../data/locales\";\nimport { useStore } from \"../components/Store\";\nimport { ToggleSwitchWithLabel } from \"./ToggleSwitch\";\nimport { googleFontNames } from \"../@types/types\";\n\nconst ButtonOnScreen = lazy(() => import(\"./ButtonOnScreen\"));\nconst Modal = lazy(() => import(\"./Modal\"));\n\ninterface PropType {\n  onLangSelectorCLicked: (lang: string) => void;\n  toggleFps: () => void;\n}\n\nexport default ({ onLangSelectorCLicked, toggleFps }: PropType) => {\n  const [windowShown, setWindowShown] = useState(false);\n  const availableLnags = locales.getAvailableLanguages();\n\n  function openWindow() {\n    setWindowShown(true);\n    useStore.setState({ isModalWindowOpen: true });\n  }\n\n  function closeWindow() {\n    setWindowShown(false);\n    useStore.setState({ isModalWindowOpen: false });\n  }\n\n  function toggleSelfieMode() {\n    useStore.setState(({ selfieMode }) => ({ selfieMode: !selfieMode }));\n  }\n\n  return (\n    <>\n      <Suspense fallback={null}>\n        <ButtonOnScreen onClick={openWindow} corner=\"topRight\">\n          <IoMdSettings title={locales.config} />\n          {locales.config}\n        </ButtonOnScreen>\n      </Suspense>\n      <Suspense fallback={null}>\n        {windowShown && (\n          <Modal close={closeWindow}>\n            <div>\n              <h3>\n                <MdLanguage title=\"Change Language\" />\n                Language\n              </h3>\n              <select\n                name=\"language\"\n                id=\"language\"\n                defaultValue={locales.getLanguage()}\n                onChange={({ currentTarget }) => onLangSelectorCLicked(currentTarget.value)}\n              >\n                {availableLnags.map((lang, index) =>\n                  <option value={lang} key={index}>{locales.getString(\"language\", lang)}</option>\n                )}\n              </select>\n\n              <h3><IoMdSettings title={locales.config} />{locales.config}</h3>\n              <ToggleSwitchWithLabel label={locales.configFps} checked={false} onChange={toggleFps} />\n              <div\n                css={css`\n                  display: grid;\n                `}\n              >\n                <p>{locales.configFont}</p>\n                <select\n                  name=\"font\"\n                  id=\"font\"\n                  defaultValue={useStore.getState().fontName}\n                  onChange={({ currentTarget }) => {useStore.setState({ fontName: currentTarget.value as googleFontNames })}}\n                >\n                  {useStore.getState().fontsGoogle.map((value, index) =>\n                    <option value={value} key={index}>{value}</option>\n                  )}\n                </select>\n                <p><a\n                  href=\"https://fonts.google.com/?subset=japanese&preview.text=%E3%83%9E%E3%82%B8%E3%82%AB%E3%83%AB%E3%83%9F%E3%83%A9%E3%82%A4&preview.text_type=custom\">フォントのプレビュー</a>\n                </p>\n              </div>\n            </div>\n\n            <h3><MdHelpOutline title={locales.about} />{locales.infoCredit}</h3>\n            <ul>\n              <li>\n                ねんどカイトくん ver.1.00 by maebari via piapro (<a href=\"https://piapro.jp/t/eO5p\">https://piapro.jp/t/eO5p</a>)\n              </li>\n              <li>\n                ねんどレンくん ver.1.00 by maebari via piapro (<a href=\"https://piapro.jp/t/hmTb\">https://piapro.jp/t/hmTb</a>)\n              </li>\n              <li>\n                ねんどルカさん ver.1.00 by maebari via piapro (<a href=\"https://piapro.jp/t/3Kkd\">https://piapro.jp/t/3Kkd</a>)\n              </li>\n              <li>\n                ねんどメイコさん ver.1.00 by maebari via piapro (<a href=\"https://piapro.jp/t/_gcH\">https://piapro.jp/t/_gcH</a>)\n              </li>\n              <li>\n                ねんどミクさん ver.3.00 by maebari via piapro (<a href=\"https://piapro.jp/t/wyAD\">https://piapro.jp/t/wyAD</a>)\n              </li>\n              <li>\n                ねんどリンちゃん ver.1.20 by maebari via piapro (<a href=\"https://piapro.jp/t/0aEn\">https://piapro.jp/t/0aEn</a>)\n              </li>\n              <li>\n                BlockMan by Robert Mark [<a href=\"(https://creativecommons.org/licenses/by/3.0/)\">CC-BY</a>]\n                via <a href=\"https://poly.pizza/m/bHcxXYw8lnl\">Poly Pizza</a>\n              </li>\n              <li>\n                <a href=\"https://magicalmirai.com/2021/images/index/logo_main_w.svg\">「マジカルミライ 2021」ロゴ画像</a>\n              </li>\n              <li>レコード盤イラスト: <a href=\"https://www.ac-illust.com/main/detail.php?id=126271\">Illust AC</a></li>\n            </ul>\n            <hr />\n            <p>{locales.infoCode}<a\n              href=\"https://github.com/mo-san/San-Juke-Box\">https://github.com/mo-san/San-Juke-Box</a></p>\n          </Modal>\n        )}\n      </Suspense>\n    </>\n  );\n};\n","import React, { ReactElement } from \"react\";\n/** @jsx jsx */\n// noinspection ES6UnusedImports\nimport { jsx, css } from \"@emotion/react\";\n\n\ninterface PropType {\n  id: string;\n  checked: boolean;\n  onChange: (event: React.ChangeEvent<any>) => void;\n}\n\ninterface PropTypeToggleWithLabel {\n  label: ReactElement | string | number;\n  checked: boolean;\n  onChange: (event: React.ChangeEvent<any>) => void;\n}\n\n\nexport const ToggleSwitchWithLabel = ({ checked, onChange, label }: PropTypeToggleWithLabel) => {\n  const randomChars = (digit = 4) => [...Array(digit)].map(() => \"0123456789abcdefghijklmnopqrstuvwxyz\"[Math.floor(Math.random() * 36)]).join(\"\");\n  const id = \"toggle-\" + randomChars(4);\n\n  return (\n    <div css={css`\n      display: grid;\n      grid-template-columns: 1fr auto;\n      cursor: pointer;\n\n      & > label {\n        cursor: pointer;\n      }\n    `}>\n      <label htmlFor={id}>{label}</label>\n      <ToggleSwitch id={id} checked={checked} onChange={onChange} />\n    </div>\n  );\n};\n\n\nexport const ToggleSwitch = ({ id, checked, onChange }: PropType) => {\n  return (\n    <div\n      className=\"toggle-switch\"\n      css={css`\n        display: inline-block;\n        width: 66px;\n        height: 30px;\n      `}\n    >\n      <input\n        type=\"checkbox\"\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        css={css`\n          display: none;\n\n          &:checked + label {\n            background-color: #4bd865;\n          }\n\n          &:checked + label:after {\n            left: 36px;\n          }\n        `}\n      />\n      <label\n        htmlFor={id}\n        css={css`\n          width: 60px;\n          height: 30px;\n          background: #ccc;\n          position: relative;\n          display: inline-block;\n          border-radius: 46px;\n          transition: 0.4s;\n          cursor: pointer;\n\n          &:after {\n            content: \"\";\n            position: absolute;\n            width: 30px;\n            height: 30px;\n            border-radius: 100%;\n            top: 0;\n            left: 0;\n            background: #fff;\n            box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);\n            transition: 0.2s;\n          }\n        `}\n      />\n    </div>\n  );\n};\n"],"names":["ButtonOnScreen","lazy","Modal","onLangSelectorCLicked","toggleFps","windowShown","setWindowShown","useState","availableLnags","Suspense","fallback","onClick","isModalWindowOpen","corner","title","close","name","id","defaultValue","onChange","currentTarget","value","map","lang","index","label","checked","css","fontName","fontsGoogle","href","ToggleSwitchWithLabel","digit","Array","Math","floor","random","join","randomChars","htmlFor","ToggleSwitch","className","type"],"sourceRoot":""}