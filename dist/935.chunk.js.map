{"version":3,"file":"935.chunk.js","mappings":"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","sources":["webpack://san-juke-box/./src/components/HandHandler.ts","webpack://san-juke-box/./src/components-react/CanvasHands.tsx"],"sourcesContent":["import React from \"react\";\nimport { Hands, Results, NormalizedLandmarkList } from \"@mediapipe/hands\";\nimport Stats from \"three/examples/jsm/libs/stats.module\";\nimport { Line as KonvaLine } from \"konva/lib/shapes/Line\";\nimport { Rect as KonvaRect } from \"konva/lib/shapes/Rect\";\nimport { Stage as KonvaStage } from \"konva/lib/Stage\";\nimport { Camera } from \"@mediapipe/camera_utils\";\nimport { useStore } from \"./Store\";\nimport { WhichHand, Vector3 } from \"../@types/types\";\n\ntype Figures = {\n  [key in WhichHand]: {\n    fingers: KonvaLine[];\n    penlight: KonvaRect;\n    palm: KonvaLine;\n    lastCoord: { [key in \"x\" | \"y\"]: number };\n    lastProcessedTime: number;\n  };\n};\n\nconst findFingers = (which: \"L\" | \"R\", group: KonvaStage) => group.getLayers()[0]\n  .getChildren((item) => item.name().startsWith(`Finger-${which}-`))\n  .sort((a, b) => parseInt(a.name().substring(10)) - parseInt(b.name().substring(10))) as KonvaLine[];\n\nconst findPenLight = (group: KonvaStage) => group.getLayers()[1]\n  .getChildren((item) => /Light-\\d+/.test(item.name())) as KonvaRect[];\n\nconst findPalm = (which: \"L\" | \"R\", group: KonvaStage) => group.getLayers()[2]\n  .getChildren((item) => item.name() === `Palm-${which}`)[0] as KonvaLine;\n\n\n/**\n * On coordinates of joints of hands (called 'landmarks' in the MediaPipe's document)\n *\n * - x: 0.0 on the leftmost of the camera ～ 1.0 on the right end.\n * - y: 0.0 on the topmost of the camera ～ 1.0 on the bottom end.\n * - z: 0 for the wrist; more negative as your hand gets closer to the camera, more positove as it gets farther.\n * Z値の範囲は -0.15～+0.1 の間にあることが多い。カメラに向かって指差したときの指先のZ値で最大 -0.15 くらいになり、逆に向けると最大 +0.1 くらい。\n *\n * Hand connections\n *\n * | index | note | 備考 |\n * |--:|:--:|:--:|\n * | 0 | wrist | 手首 |\n * | 1 | thumb_cmc | 親指 付け根 |\n * | 2 | thumb_mcp | 親指 第二関節 |\n * | 3 | thumb_ip | 親指 第一関節 |\n * | 4 | thumb_tip | 親指 先端 |\n * | 5 | index_finger_mcp | 人差し指 付け根 |\n * | 6 | index_finger_pip | 人差し指 第二関節 |\n * | 7 | index_finger_dip | 人差し指 第一関節 |\n * | 8 | index_finger_tip | 人差し指 先端 |\n * | 9 | middle_finger_mcp | 中指 付け根 |\n * | 10 | middle_finger_pip | 中指 第二関節 |\n * | 11 | middle_finger_dip | 中指 第一関節 |\n * | 12 | middle_finger_tip | 中指 先端 |\n * | 13 | ring_finger_mcp | 薬指 付け根 |\n * | 14 | ring_finger_pip | 薬指 第二関節 |\n * | 15 | ring_finger_dip | 薬指 第一関節 |\n * | 16 | ring_finger_tip | 薬指 先端 |\n * | 17 | pinky_mcp | 小指 付け根 |\n * | 18 | pinky_pip | 小指 第二関節 |\n * | 19 | pinky_dip | 小指 第一関節 |\n * | 20 | pinky_tip | 小指 先端 |\n *\n * ![landmarks](https://google.github.io/mediapipe/images/mobile/hand_landmarks.png)\n */\nexport class HandHandler {\n  videoElement: HTMLVideoElement;\n  stats: Stats;\n  canUseCamera: boolean;\n\n  handsRecognizer?: Hands;\n  handOptions: { maxNumHands: number; minDetectionConfidence: number; minTrackingConfidence: number; selfieMode: boolean };\n  figures: Figures;\n  penLights: KonvaRect[];\n\n  /** the time between sampling the position of a hand (or a mouse). */\n  timeThreshold = 1000 / 5; // 200ms\n  sumMovement = 0;\n  touchingFIngers: { [key: number]: KonvaRect } = {};\n\n  constructor(refStage: React.RefObject<KonvaStage>, videoElement: HTMLVideoElement, canUseCamera: boolean, stats: Stats) {\n    this.videoElement = videoElement;\n    this.stats = stats;\n    this.canUseCamera = canUseCamera;\n    this.handOptions = {\n      maxNumHands: useStore.getState().maxHands,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n      selfieMode: useStore.getState().selfieMode,\n    };\n\n    this.penLights = findPenLight(refStage.current!);\n    this.figures = {\n      Left: {\n        fingers: findFingers(\"L\", refStage.current!),\n        penlight: this.penLights[0],\n        palm: findPalm(\"L\", refStage.current!),\n        lastCoord: { x: 0, y: 0 },\n        lastProcessedTime: 0,\n      },\n      Right: {\n        fingers: findFingers(\"R\", refStage.current!),\n        penlight: this.penLights[1],\n        palm: findPalm(\"R\", refStage.current!),\n        lastCoord: { x: 0, y: 0 },\n        lastProcessedTime: 0,\n      }\n    };\n\n    useStore.subscribe(\n      (selfieMode) => this.handsRecognizer?.setOptions({ ...this.handOptions, selfieMode: selfieMode as boolean, }),\n      (state) => state.selfieMode\n    );\n\n    if (!this.canUseCamera) {\n      const lightHeight = this.penLights[0].height();\n      this.penLights.forEach((light) => light.offsetY(lightHeight * 4 / 5));\n\n      if (useStore.getState().isTouchDevice) {\n        document.addEventListener(\"touchstart\", this.#onTouchStart);\n        document.addEventListener(\"touchend\", this.#onTouchEnd);\n        document.addEventListener(\"touchmove\", this.#onTouchMoved);\n      } else {\n        document.addEventListener(\"mousedown\", this.#onMouseDown);\n        document.addEventListener(\"mouseup\", this.#onMouseUp);\n        document.addEventListener(\"mousemove\", this.#onMouseMoved);\n      }\n    }\n\n    this.#animate(0);\n  }\n\n  startRecognition = () => {\n    if (this.handsRecognizer) return;\n    setTimeout(this.initializeRecognizer, 1);\n\n    new Camera(this.videoElement, {\n      onFrame: async () => await this.handsRecognizer?.send({ image: this.videoElement }),\n      width: 1, // default: 640\n      height: 1, // default: 480\n    }).start();\n  };\n\n  stopRecognition = () => {\n    if (!this.handsRecognizer) return;\n    this.handsRecognizer.close();\n    this.handsRecognizer = undefined;\n  };\n\n  initializeRecognizer = () => {\n    this.handsRecognizer = new Hands({\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/hands@0.3/${file}` // 消すと動かない\n    });\n\n    this.handsRecognizer.setOptions(this.handOptions);\n\n    this.handsRecognizer.onResults(this.#onResult);\n  };\n\n  /**\n   * Called after each recognition of an image to process the reognized finger points.\n   * @param multiHandLandmarks An array of arrays of positions of fingers.\n   * @param multiHandedness Index, confidence score, and label (left or right) of each recognized hand.\n   * @param image Images of elements such as canvas or video or image, which are applicable to ctx.drawImage\n   */\n  #onResult = ({ multiHandLandmarks, multiHandedness }: Results) => {\n    if (this.stats) this.stats.update();\n\n    if (multiHandedness.length < 1) return;\n\n    // video input for debug\n    // const debugCanvasCtx = (document.querySelector(\"#canvas-debug\") as HTMLCanvasElement).getContext(\"2d\") as CanvasRenderingContext2D;\n    // debugCanvasCtx.drawImage(image, 0, 0, debugCanvasCtx.canvas.width, debugCanvasCtx.canvas.height);\n\n    const leftHandIndex = multiHandedness[0].label === \"Left\" ? 0 : 1;\n\n    multiHandLandmarks.forEach((landmarkList, handIndex) => {\n      const which: WhichHand = handIndex === leftHandIndex ? \"Left\" : \"Right\";\n\n      this.#updateSkeleton(which, landmarkList);\n      this.#updatePenLight(which, landmarkList);\n      this.#updateEffectRank(which, landmarkList[9]);\n    });\n  }\n\n  /**\n   * Updates the position and shape of a hand.\n   */\n  #updateSkeleton = (which: WhichHand, landmarkList: NormalizedLandmarkList) => {\n    const targets = [\n      [2, 3, 4], // thumb\n      [6, 7, 8], // index finger\n      [10, 11, 12], // middle finger\n      [14, 15, 16], // ring finger\n      [18, 19, 20], // pinky\n      [0, 1, 5, 9, 13, 17], // palm\n    ];\n\n    // set vertices for fingers\n    this.figures[which].fingers.forEach((line, index) => {\n      line.points(\n        targets[index].map((num) => [landmarkList[num].x * window.innerWidth, landmarkList[num].y * window.innerHeight]).flat()\n      );\n    });\n\n    // set vertices for the palm and close the path\n    this.figures[which].palm\n      .closed(true)\n      .points(\n        targets[5].map((num) => [landmarkList[num].x * window.innerWidth, landmarkList[num].y * window.innerHeight]).flat()\n      );\n  }\n\n  /**\n   * Updates the positions of a penlight.\n   */\n  #updatePenLight = (which: WhichHand, landmarkList: NormalizedLandmarkList) => {\n    const folded = this.#isHandFolded(landmarkList);\n    this.figures[which].penlight.visible(folded);\n    if (folded) {\n      this.figures[which].penlight.position({\n        x: (landmarkList[0].x + landmarkList[9].x) / 2 * window.innerWidth,\n        y: (landmarkList[0].y + landmarkList[9].y) / 2 * window.innerHeight\n      });\n      const angle = this.#rad2deg(this.#calcAngle(landmarkList));\n      this.figures[which].penlight.rotation(which === \"Left\" ? -1 * angle : angle);\n    }\n  }\n\n  /**\n   * Determines if the movements of mice or fingers exceed the threshold. If so, dispatch the new rank.\n   */\n  #updateEffectRank = (which: WhichHand, point: { x: number; y: number }) => {\n    const now = performance.now();\n    if (now - this.figures[which].lastProcessedTime <= this.timeThreshold) return;\n    this.figures[which].lastProcessedTime = now;\n\n    const distance = this.#calcDistance(point, this.figures[which].lastCoord);\n    this.figures[which].lastCoord = { x: point.x, y: point.y };\n\n    const prevSum = this.sumMovement;\n    const effectRankThreshold = useStore.getState().effectRankThreshold;\n    for (let index = 0; index < effectRankThreshold.length; index++) {\n      const threshold = effectRankThreshold[index];\n      if (prevSum < threshold && (prevSum + distance) >= threshold) {\n        const effectRank = index === 0 ? 4 : index === 1 ? 3 : index === 2 ? 2 : index === 3 ? 1 : 0;\n        useStore.setState({ effectRank: effectRank });\n        break;\n      }\n    }\n    this.sumMovement += distance;\n  }\n\n  /**\n   * Determines whether the fingers are folded, based on whether the index finger and the middle finger are both folded.\n   */\n  #isHandFolded = (landmarks: Vector3[]) => {\n    const { x: v0x, y: v0y, z: v0z } = landmarks[0];\n    const { x: v5x, y: v5y, z: v5z } = landmarks[5];\n    const { x: v8x, y: v8y, z: v8z } = landmarks[8];\n    const { x: v9x, y: v9y, z: v9z } = landmarks[9];\n    const { x: v12x, y: v12y, z: v12z } = landmarks[12];\n\n    const vec5to0 = { x: v0x - v5x, y: v0y - v5y, z: v0z - v5z };\n    const vec5to8 = { x: v8x - v5x, y: v8y - v5y, z: v8z - v5z };\n    const isIndexFingerFolded = this.#hasSharpAngle(vec5to0, vec5to8);\n\n    const vec9to0 = { x: v0x - v9x, y: v0y - v9y, z: v0z - v9z };\n    const vec9to12 = { x: v12x - v9x, y: v12y - v9y, z: v12z - v9z };\n    const isMiddleFingerFolded = this.#hasSharpAngle(vec9to0, vec9to12);\n\n    return isIndexFingerFolded && isMiddleFingerFolded;\n  }\n\n  /**\n   * Calculates the distance between two points.\n   */\n  #calcDistance = ({ x: x1, y: y1 }: { x: number; y: number }, { x: x2, y: y2 }: { x: number; y: number }) => (\n    Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))\n  );\n\n  /**\n   * Determines whether the angle made by the two vectors is sharp.\n   */\n  #hasSharpAngle = (vec1: Vector3, vec2: Vector3) => {\n    const denominator = this.#calcDenominator(vec1, vec2);\n    if (denominator === 0) return true; // when 90 degree (PI / 2)\n    const dot = this.#calcDot(vec1, vec2);\n    return (dot / denominator) >= 0; // when cosine is zero or more (== 90 degree or less)\n  };\n\n  /**\n   * Returns the angle in degrees between the bottom of the index finger and the bottom of the ring finger.\n   */\n  #calcAngle = (landmarks: Vector3[]) => {\n    const { x: v5x, y: v5y, z: v5z } = landmarks[5];\n    const { x: v13x, y: v13y, z: v13z } = landmarks[13];\n\n    const vec13to5 = { x: v5x - v13x, y: v5y - v13y, z: v5z - v13z };\n    const vecUpright = { x: 0, y: 1, z: 0 };\n    const denominator = this.#calcDenominator(vec13to5, vecUpright);\n    // avoid zero division if denominator is zero (i.e. vectors are vertical)\n    return Math.acos(denominator === 0 ? 0 : (this.#calcDot(vec13to5, vecUpright) / denominator));\n  }\n\n  /**\n   * Calculates the number to be used as a denominator of cosine.\n   */\n  #calcDenominator = (vec1: Vector3, vec2: Vector3) => Math.sqrt(\n    (vec1.x * vec1.x + vec1.y * vec1.y + vec1.z * vec1.z) * (vec2.x * vec2.x + vec2.y * vec2.y + vec2.z * vec2.z)\n  );\n\n  /**\n   * Calculates the dot product of two vectors.\n   */\n  #calcDot = (vec1: Vector3, vec2: Vector3) => (vec1.x * vec2.x + vec1.y * vec2.y + vec1.z * vec2.z);\n\n  #rad2deg = (num: number) => num * 57.29578;\n\n  // #clamp = (a: number, lower: number, upper: number) => Math.max(Math.min(lower, upper), Math.min(Math.max(lower, upper), a));\n  //\n  // #lerp = (middle: number, x0: number, x1: number, y0: number, y1: number) => {\n  //   const inner = (y0 * (1 - (middle - x0) / (x1 - x0))) + (y1 * (1 - (x1 - middle) / (x1 - x0)));\n  //   return this.#clamp(inner, y0, y1);\n  // }\n\n  #onMouseDown = (event: MouseEvent) => {\n    this.penLights[0].visible(true);\n    this.penLights[0].x(event.screenX);\n    this.penLights[0].y(event.screenY);\n  }\n\n  #onMouseUp = (_: MouseEvent) => {\n    this.penLights[0].visible(false);\n  }\n\n  /**\n   * Move one light following the mouse.\n   */\n  #onMouseMoved = (event: MouseEvent) => {\n    this.penLights[0].x(event.screenX);\n    this.penLights[0].y(event.screenY);\n  }\n\n  /**\n   * Set lights visible depending on touching fingers.\n   */\n  #onTouchStart = (event: TouchEvent) => {\n    const num = Object.keys(this.touchingFIngers).length;\n    if (num >= 10) return;\n\n    for (let i = 0; i < Math.min(9, event.changedTouches.length); i++) {\n      this.touchingFIngers[event.changedTouches[i].identifier] = this.penLights[num];\n    }\n\n    Object.entries(this.touchingFIngers).forEach(([, penlight]) => penlight.visible(true));\n  }\n\n  /**\n   * Set lights invisible corresponding the released touch IDs.\n   */\n  #onTouchEnd = (event: TouchEvent) => {\n    for (let i = 0; i < event.changedTouches.length; i++) {\n      this.touchingFIngers[event.changedTouches[i].identifier].visible(false);\n      delete this.touchingFIngers[event.changedTouches[i].identifier];\n    }\n  }\n\n  /**\n   * Move lights following currently touching fingers position.\n   */\n  #onTouchMoved = (event: TouchEvent) => {\n    for (let i = 0; i < event.changedTouches.length; i++) {\n      const touch = event.changedTouches[i];\n      const penlight = this.touchingFIngers[touch.identifier];\n      penlight.x(touch.clientX);\n      penlight.y(touch.clientY);\n    }\n  }\n\n  #animate = (time: number) => {\n    requestAnimationFrame(this.#animate);\n\n    if (useStore.getState().effectRank >= 1) {\n      // Brightness accepts number from -1 to 1\n      const brightness = Math.sin(time / 1000 * Math.PI) * (1 / 3) + (1 / 3);\n      this.penLights.filter((light) => light.visible()).forEach((light) => light.brightness(brightness));\n    }\n\n    if (!this.canUseCamera) {\n      const rad = Math.asin(Math.sin(time / 1000 * Math.PI) / 1.41);\n      const angle = this.#rad2deg(rad);\n      this.penLights.filter((light) => light.visible()).forEach((light) => light.rotation(angle));\n    }\n  }\n}\n","import React, { useRef, useEffect } from \"react\";\n/** @jsx jsx */\n// noinspection ES6UnusedImports\nimport { css, jsx } from \"@emotion/react\";\nimport { Brighten } from \"konva/lib/filters/Brighten\";\nimport { Stage as KonvaStage } from \"konva/lib/Stage\";\nimport { Stage, Layer, Rect, Line } from \"react-konva/es/ReactKonvaCore\";\nimport \"konva/lib/shapes/Line\";\nimport \"konva/lib/shapes/Circle\";\nimport \"konva/lib/shapes/Rect\";\nimport { HandHandler } from \"../components/HandHandler\";\nimport { statsHands } from \"../components/Utils\";\nimport { useStore } from \"../components/Store\";\n\n\ninterface PropType {\n  zIndex: number;\n}\n\ninterface PropTypePenLight {\n  name: string;\n  ref?: React.RefObject<any>;\n  fillStops?: (string | number)[];\n}\n\n\nconst Skeleton = ({ points, name }: { points?: number[]; name: string }) => {\n  return (\n    <Line\n      name={name}\n      points={points}\n      tension={0.5}\n      stroke={`#444444`}\n      strokeWidth={30}\n      fill={`#e0e0e0`}\n      lineCap=\"round\"\n      lineJoin=\"round\"\n    />\n  );\n};\n\n\nconst PenLight = ({ ref, name, fillStops }: PropTypePenLight) => {\n  const height = window.innerHeight * 2 / 3;\n  const width = height / 5;\n\n  return (\n    <Rect\n      ref={ref}\n      name={name}\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      fillLinearGradientStartPoint={{ x: 0, y: height / 2 }}\n      fillLinearGradientEndPoint={{ x: width, y: height / 2 }}\n      fillLinearGradientColorStops={fillStops}\n      filters={[Brighten]}\n      cornerRadius={10}\n      offsetX={width / 2}\n      offsetY={height / 4}\n      visible={false}\n    />\n  );\n};\n\n\nexport default ({ zIndex }: PropType) => {\n  const refVideo = useRef<HTMLVideoElement>(null);\n  const refStage = useRef<KonvaStage>(null);\n  const fillStops = useStore.getState().colorLightFillStops;\n  const chara = useStore.getState().selectedModelNames[0];\n\n  const onWindowResize = () => {\n    refStage.current?.width(window.innerWidth);\n    refStage.current?.height(window.innerHeight);\n  };\n\n  useEffect(() => {\n    (document.querySelector(\"#fps-hands\") as HTMLElement).appendChild(statsHands.dom);\n\n    const videoElement = refVideo.current as HTMLVideoElement;\n    const canUseCamera = useStore.getState().useCamera;\n    const handler = new HandHandler(refStage, videoElement, canUseCamera, statsHands);\n\n    if (canUseCamera) {\n      useStore.setState({ startRecognition: handler.startRecognition });\n      useStore.setState({ stopRecognition: handler.stopRecognition });\n    }\n\n    window.addEventListener(\"resize\", onWindowResize);\n  }, []);\n\n  return (\n    <>\n      <video\n        id=\"video-hands\"\n        ref={refVideo}\n        css={css`\n          display: none;\n          z-index: ${zIndex - 1};\n          position: fixed;\n          top: 0;\n          left: 0;\n          transform: scaleX(-1); /* flip horizontally */\n        `}\n      />\n      <Stage\n        width={window.innerWidth}\n        height={window.innerHeight}\n        ref={refStage}\n        css={css`\n          display: block;\n          z-index: ${zIndex};\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100vw;\n          max-width: 100vw;\n          height: 100vh;\n          max-height: 100vh;\n        `}\n      >\n        <Layer>\n          <Skeleton name={`Finger-L-1`} />\n          <Skeleton name={`Finger-L-2`} />\n          <Skeleton name={`Finger-L-3`} />\n          <Skeleton name={`Finger-L-4`} />\n          <Skeleton name={`Finger-L-5`} />\n          <Skeleton name={`Finger-R-1`} />\n          <Skeleton name={`Finger-R-2`} />\n          <Skeleton name={`Finger-R-3`} />\n          <Skeleton name={`Finger-R-4`} />\n          <Skeleton name={`Finger-R-5`} />\n        </Layer>\n        <Layer>\n          <PenLight name={`Light-0`} fillStops={fillStops[chara]} />\n          <PenLight name={`Light-1`} fillStops={fillStops[chara]} />\n          <PenLight name={`Light-2`} fillStops={fillStops[chara]} />\n          <PenLight name={`Light-3`} fillStops={fillStops[chara]} />\n          <PenLight name={`Light-4`} fillStops={fillStops[chara]} />\n          <PenLight name={`Light-5`} fillStops={fillStops[chara]} />\n          <PenLight name={`Light-6`} fillStops={fillStops[chara]} />\n          <PenLight name={`Light-7`} fillStops={fillStops[chara]} />\n          <PenLight name={`Light-8`} fillStops={fillStops[chara]} />\n          <PenLight name={`Light-9`} fillStops={fillStops[chara]} />\n        </Layer>\n        <Layer>\n          <Skeleton name={`Palm-L`} />\n          <Skeleton name={`Palm-R`} />\n        </Layer>\n      </Stage>\n      {/*<canvas*/}\n      {/*  id=\"canvas-debug\"*/}\n      {/*  css={css`*/}\n      {/*    z-index: ${zIndex + 1};*/}\n      {/*  `}*/}\n      {/*/>*/}\n    </>\n  );\n};\n"],"names":["findFingers","which","group","getLayers","getChildren","item","name","startsWith","sort","a","b","parseInt","substring","findPalm","HandHandler","constructor","refStage","videoElement","canUseCamera","stats","timeThreshold","sumMovement","touchingFIngers","startRecognition","this","handsRecognizer","setTimeout","initializeRecognizer","Camera","onFrame","async","send","image","width","height","start","stopRecognition","close","undefined","Hands","locateFile","file","setOptions","handOptions","onResults","multiHandLandmarks","multiHandedness","update","length","leftHandIndex","label","forEach","landmarkList","handIndex","targets","figures","fingers","line","index","points","map","num","x","window","innerWidth","y","innerHeight","flat","palm","closed","folded","penlight","visible","position","angle","rotation","point","now","performance","lastProcessedTime","distance","lastCoord","prevSum","effectRankThreshold","threshold","effectRank","landmarks","v0x","v0y","z","v0z","v5x","v5y","v5z","v8x","v8y","v8z","v9x","v9y","v9z","v12x","v12y","v12z","vec5to0","vec5to8","isIndexFingerFolded","vec9to0","vec9to12","isMiddleFingerFolded","x1","y1","x2","y2","Math","sqrt","vec1","vec2","denominator","v13x","v13y","v13z","vec13to5","vecUpright","acos","event","penLights","screenX","screenY","_","Object","keys","i","min","changedTouches","identifier","entries","touch","clientX","clientY","time","requestAnimationFrame","brightness","sin","PI","filter","light","rad","asin","maxNumHands","maxHands","minDetectionConfidence","minTrackingConfidence","selfieMode","current","test","Left","Right","state","lightHeight","offsetY","isTouchDevice","document","addEventListener","Skeleton","tension","stroke","strokeWidth","fill","lineCap","lineJoin","PenLight","ref","fillStops","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","filters","Brighten","cornerRadius","offsetX","zIndex","refVideo","useRef","colorLightFillStops","chara","selectedModelNames","onWindowResize","useEffect","querySelector","appendChild","useCamera","handler","id","css"],"sourceRoot":""}