{"version":3,"file":"696.chunk.js","mappings":"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","sources":["webpack://san-juke-box/./src/components-react/ExclusiveChoices.tsx","webpack://san-juke-box/./src/components-react/SongSelector.tsx","webpack://san-juke-box/./src/components-react/CharaSelector.tsx","webpack://san-juke-box/./src/components-react/Landing.tsx","webpack://san-juke-box/./src/components-react/ToggleSwitch.tsx"],"sourcesContent":["import React from \"react\";\n/** @jsx jsx */\n// noinspection ES6UnusedImports\nimport { jsx, css, SerializedStyles } from \"@emotion/react\";\n\ninterface PropType {\n  selectedIndex: number;\n  choices: string[];\n  onChange: (index: number) => void;\n  extraCss?: SerializedStyles;\n}\n\nexport const ExclusiveChoices = ({ selectedIndex, choices, onChange, extraCss }: PropType) => {\n  return (\n    <div\n      css={css`\n        display: inline-flex;\n\n        & > button {\n          display: inline-flex;\n          margin: 0;\n          padding: 0 1rem;\n          height: 2.5rem;\n          align-items: center;\n          justify-content: center;\n          position: relative;\n          box-sizing: border-box;\n          background-color: transparent;\n          border: 1px solid rgba(0, 0, 0, 0.12);\n          border-radius: 1.25rem;\n          outline: currentcolor none 0;\n          cursor: pointer;\n          user-select: none;\n          font-size: 0.875rem;\n        }\n\n        & > button:not(:last-of-type) {\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n\n        & > button:not(:first-of-type) {\n          margin-left: -1px;\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n\n        & > button:nth-of-type(${selectedIndex}) {\n          background-color: rgba(75, 216, 101, 0.2);\n          color: rgb(0, 89, 16);\n          border-color: rgba(0, 0, 0, 0.3);\n        }\n\n        ${extraCss}\n      `}\n    >\n      {choices.map((choice, index) => (\n        <button key={index} onClick={() => onChange(index)}>{choice}</button>\n      ))}\n    </div>\n  );\n};\n","import React, { useRef } from \"react\";\n/** @jsx jsx */\n// noinspection ES6UnusedImports\nimport { jsx, css } from \"@emotion/react\";\nimport gsap from \"gsap\";\nimport { DropResult, Container, Draggable } from \"react-smooth-dnd\";\nimport { GrDrag } from \"react-icons/gr\";\nimport { useStore } from \"../components/Store\";\nimport { SongTitle } from \"../@types/types\";\nimport { locales } from \"../data/locales\";\nimport { ExclusiveChoices } from \"./ExclusiveChoices\";\n\ninterface PropType {\n  songArr: { title: SongTitle; composer: string; thumbnailUrl: string }[];\n  setSongArr: React.Dispatch<React.SetStateAction<{ title: SongTitle; composer: string; thumbnailUrl: string }[]>>;\n  sequential: boolean;\n  setSequential: React.Dispatch<React.SetStateAction<boolean>>;\n  setSelectedSongs: (arr: SongTitle[]) => void;\n  refs: React.MutableRefObject<any>[];\n  playButtonShown: boolean;\n  setPlayButtonShown: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\ninterface PropTypeSongGrid {\n  title: string;\n  composer: string;\n  thumbnailUrl: string;\n  clickHandler: () => void;\n  playButtonShown: boolean;\n  setPlayButtonShown: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst onDrop = (\n  { removedIndex, addedIndex }: DropResult,\n  setItems: React.Dispatch<React.SetStateAction<{ title: SongTitle; composer: string; thumbnailUrl: string }[]>>\n) => {\n  if (removedIndex === null || addedIndex === null) return;\n\n  setItems((prevItems) => {\n    const itemToAdd = prevItems.splice(removedIndex, 1)[0];\n    prevItems.splice(addedIndex, 0, itemToAdd);\n    return [...prevItems];\n  });\n};\nexport const SongSelector = (\n  {\n    songArr,\n    setSongArr,\n    sequential,\n    setSequential,\n    setSelectedSongs,\n    playButtonShown,\n    setPlayButtonShown\n  }: PropType) => {\n  return (\n    <div\n      className=\"song-select\"\n      css={css`\n        margin: 3rem 0;\n\n        & > p {\n          margin: 0.5rem 0;\n        }\n      `}\n    >\n      <h2\n        css={css`\n          position: relative;\n          overflow: hidden;\n          padding: 1.5rem 2rem 1.5rem 130px;\n          word-break: break-all;\n          border-top: 3px solid #000;\n          border-radius: 12px 0 0 0;\n\n          & > span {\n            font-size: 2rem;\n            position: absolute;\n            top: 0;\n            left: 0;\n            display: block;\n            padding: 3px 20px;\n            color: #fff;\n            border-radius: 10px 0 20px 10px;\n            background: #000;\n          }\n        `}\n      >\n        <span>03</span>\n        {locales.songTitle}\n      </h2>\n      <p>{locales.song1}</p>\n      <div\n        css={css`\n          display: grid;\n          justify-items: center;\n          grid-gap: 1rem;\n        `}\n      >\n        <ExclusiveChoices\n          selectedIndex={sequential ? 2 : 1}\n          choices={[locales.songPlayOnce, locales.songPlaySequential]}\n          onChange={(index) => setSequential(index === 1)}\n          extraCss={css`\n            margin-left: 36px;\n          `}\n        />\n        <Container\n          dragHandleSelector=\".drag-handle\"\n          lockAxis=\"y\"\n          onDrop={(result) => onDrop(result, setSongArr)}\n        >\n          {songArr.map(({ title, composer, thumbnailUrl }, index) => (\n            <Draggable key={index}>\n              <div\n                className=\"draggable-item\"\n                css={css`\n                  display: flex;\n                  align-items: center;\n                  margin: 0.5rem 0 0.5rem;\n                `}\n              >\n                <div\n                  className=\"drag-handle\"\n                  css={css`\n                    display: flex;\n                    align-items: center;\n                    width: 36px;\n                    height: 24px;\n                    background-color: #f5f5f5;\n                    border-radius: 4px;\n\n                    & > svg {\n                      width: 100%;\n                      height: 1rem;\n                    }\n                  `}\n                >\n                  <GrDrag />\n                </div>\n                <SongGrid\n                  key={index}\n                  title={title}\n                  composer={composer}\n                  thumbnailUrl={thumbnailUrl}\n                  playButtonShown={playButtonShown}\n                  setPlayButtonShown={setPlayButtonShown}\n                  clickHandler={() => {\n                    setSelectedSongs(!sequential ? [title] : songArr.slice(index).map(({ title }) => title));\n                  }}\n                />\n              </div>\n            </Draggable>\n          ))}\n        </Container>\n      </div>\n    </div>\n  );\n};\n\n\nconst SongGrid = (\n  {\n    title,\n    composer,\n    thumbnailUrl,\n    clickHandler,\n    playButtonShown,\n    setPlayButtonShown\n  }: PropTypeSongGrid) => {\n  const refImage = useRef<HTMLDivElement>({} as HTMLDivElement);\n\n  return (\n    <div\n      className=\"song-item\"\n      onClick={() => { onMouseClickOnGrid(refImage, clickHandler, playButtonShown, setPlayButtonShown) }}\n      onMouseEnter={() => onMouseEnterOnGrid(refImage)}\n      onMouseLeave={() => onMouseLeaveOnGrid(refImage)}\n      css={css`\n        box-shadow: rgba(0, 0, 0, 0.2) 0 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px;\n        border-radius: 4px;\n        background-color: rgb(255, 255, 255);\n        color: rgba(0, 0, 0, 0.87);\n        position: relative;\n      `}\n    >\n      <div\n        className=\"record\"\n        ref={refImage}\n        css={css`\n          position: absolute;\n          width: 320px;\n          height: 0;\n          top: 0;\n          z-index: 1;\n          background-image: url(\"../img/record.png\");\n          background-size: cover;\n          transition: all 0.2s ease-in-out 0s;\n        `}\n      />\n      <img\n        src={thumbnailUrl}\n        alt={`Youtube thumbnail for \"${title}\"`}\n        draggable=\"false\"\n        css={css`\n          display: block;\n          width: 100%;\n          max-width: 100%;\n          object-fit: cover;\n          z-index: 2;\n          position: relative;\n        `}\n      />\n      <div\n        css={css`\n          padding: 1rem;\n          position: relative;\n          z-index: 2;\n          background-color: rgb(255, 255, 255);\n        `}\n      >\n        <p\n          css={css`\n            margin: 0 0 0.35em;\n            font-size: 1.5rem;\n            line-height: 1.3;\n            letter-spacing: 0;\n          `}\n        >\n          {title}\n        </p>\n        <p\n          css={css`\n            margin: 0;\n            font-size: 0.9rem;\n            line-height: 1.43;\n            color: rgba(0, 0, 0, 0.6);\n          `}\n        >\n          {composer}\n        </p>\n      </div>\n    </div>\n  );\n};\n\n\nconst onMouseEnterOnGrid = ({ current }: { current: HTMLElement }) => {\n  // if smartphone\n  if (useStore.getState().isTouchDevice) return;\n  // if already selected something\n  if (useStore.getState().isSongGridClicked) return;\n\n  gsap.to(current, {\n    height: 320,\n    top: -120,\n    duration: 0.1,\n    ease: \"back.out(1.5)\"\n  });\n};\n\n\nconst onMouseLeaveOnGrid = ({ current }: { current: HTMLElement }) => {\n  if (useStore.getState().isTouchDevice) return;\n  if (useStore.getState().isSongGridClicked) return;\n\n  gsap.to(current, {\n    height: 0,\n    top: 0,\n    duration: 0.1,\n  });\n};\n\n\nconst onMouseClickOnGrid = (\n  { current }: { current: HTMLElement },\n  clickHandler: () => void,\n  playButtonShown: boolean,\n  setPlayButtonShown: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  if (useStore.getState().isTouchDevice) {\n    if (!playButtonShown) {\n      gsap.to(current, {\n        height: 320,\n        top: -120,\n        duration: 0.1,\n        ease: \"back.out(1.5)\",\n        onComplete: clickHandler,\n      });\n    } else {\n      gsap.to(current, {\n        height: 0,\n        top: 0,\n        duration: 0.1,\n      });\n    }\n    setPlayButtonShown(!playButtonShown);\n\n  } else {\n    gsap\n      .timeline()\n      .to(current, {\n        height: 320,\n        top: -320,\n        duration: 0.5,\n        onComplete: clickHandler,\n      })\n      .set(current, {\n        width: 320,\n        height: 0,\n        top: 0,\n        left: 0,\n      });\n  }\n};\n","import React from \"react\";\n/** @jsx jsx */\n// noinspection ES6UnusedImports\nimport { jsx, css } from \"@emotion/react\";\nimport { MdCheckCircle } from \"react-icons/md\";\nimport { locales } from \"../data/locales\";\nimport { MmdModelName } from \"../@types/types\";\nimport { useStore } from \"../components/Store\";\n\nconst breakpoints = [0, 320, 640, 1200];\nconst query = breakpoints.map(\n  (bp) => `@media (min-width: ${bp}px)`\n);\n\ninterface PropType {\n  onCharaChanged: () => void;\n}\n\nexport const CharaSelector = ({ onCharaChanged }: PropType) => {\n  return (\n    <div\n      className=\"character-select\"\n      css={css`\n        margin: 3rem 0;\n\n        & > p {\n          margin: 0.5rem 0;\n        }\n      `}\n    >\n      <h2\n        css={css`\n          position: relative;\n          overflow: hidden;\n          padding: 1.5rem 2rem 1.5rem 130px;\n          word-break: break-all;\n          border-top: 3px solid #000;\n          border-radius: 12px 0 0 0;\n\n          & > span {\n            font-size: 2rem;\n            position: absolute;\n            top: 0;\n            left: 0;\n            display: block;\n            padding: 3px 20px;\n            color: #fff;\n            border-radius: 10px 0 20px 10px;\n            background: #000;\n          }\n        `}\n      >\n        <span>02</span>\n        {locales.charaTitle}\n      </h2>\n      <p>{locales.chara1}</p>\n      <p>{locales.chara2}</p>\n      <div\n        css={css`\n          display: grid;\n          grid-gap: 1rem;\n          margin: 2rem auto;\n          justify-content: space-around;\n\n          ${query[0]} {\n            grid-template-columns: repeat(1, 1fr);\n          }\n\n          ${query[1]} {\n            grid-template-columns: repeat(2, 1fr);\n            max-width: calc(150px * 2 + 1rem);\n          }\n\n          ${query[2]} {\n            grid-template-columns: repeat(3, 1fr);\n            max-width: calc(150px * 3 + 1rem * 2);\n          }\n        `}\n      >\n        {([\n          \"nendo_miku\", \"nendo_kaito\", \"nendo_meiko\",\n          \"nendo_rin\", \"nendo_len\", \"nendo_luka\"] as MmdModelName[]).map((name, index) => (\n          <div\n            key={index}\n            className={name}\n            onClick={() => {\n              useStore.setState({ selectedModelNames: [name] });\n              onCharaChanged();\n            }}\n            css={css`\n              margin: auto;\n              position: relative;\n            `}\n          >\n            <img\n              src={`../img/${name}.png`}\n              alt={`${name}`}\n              draggable=\"false\"\n              css={css`\n                width: 150px;\n                height: 150px;\n              `}\n            />\n            {useStore.getState().selectedModelNames.includes(name) && (\n              <span css={css`\n                position: absolute;\n                inset: auto 0 0 auto;\n                font-size: 2rem;\n              `}><MdCheckCircle /></span>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef, lazy, Suspense } from \"react\";\n/** @jsx jsx */\n// noinspection ES6UnusedImports\nimport { jsx, css } from \"@emotion/react\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { MUSIC } from \"../data/music\";\nimport { ToggleSwitchWithLabel } from \"./ToggleSwitch\";\nimport { SongTitle } from \"../@types/types\";\nimport { useStore } from \"../components/Store\";\nimport { locales } from \"../data/locales\";\nimport { SongSelector } from \"./SongSelector\";\nimport { CharaSelector } from \"./CharaSelector\";\n\nconst PlayButton = lazy(() => import(\"./PlayButton\"));\n\ninterface PropType {\n  startPlaying: () => void;\n  appStarted: boolean;\n}\n\ninterface PropTypeCameraConfirm {\n  canUseCamera: boolean;\n  toggleCanUseCamera: () => void;\n}\n\n\nconst songs = [...MUSIC]\n  .sort(({ initialOrder: a }, { initialOrder: b }) => a - b)\n  .map(({ title, composer, thumbnailUrl }) => ({ title, composer, thumbnailUrl }));\n\n\nconst Title = () => {\n  return (\n    <div\n      className=\"title\"\n    >\n      <h1\n        css={css`\n          font-family: \"Zen Tokyo Zoo\", serif;\n          font-size: 10vmin;\n          font-weight: normal;\n          margin: 0;\n        `}\n      >\n        San-Juke Box\n      </h1>\n    </div>\n  );\n};\n\n\nconst Introduction = () => {\n  return (\n    <div\n      className=\"introduction\"\n      css={css`\n        & > p {\n          margin: 0.5rem 0;\n        }\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          gap: 0.3rem;\n          margin-bottom: 6vmin;\n\n          & > img {\n            width: 100%;\n            max-width: 300px;\n            object-fit: cover;\n            margin: auto;\n          }\n        `}\n      >\n        <img src=\"img/screenshot.jpg\" alt=\"play demo 1\" title=\"play demo 1\" />\n      </div>\n      <p>{locales.intro1}</p>\n      <p>{locales.intro2}</p>\n      <p>{locales.intro3}</p>\n      <p>{locales.intro4}</p>\n      <aside\n        css={css`\n          display: flex;\n          margin: 1rem 0 0;\n          padding: 0.4rem 1rem;\n          box-shadow: none;\n          border-radius: 4px;\n          font-size: 0.88rem;\n          color: rgb(1, 67, 97);\n          background-color: rgb(229, 246, 253);\n        `}\n      >\n        <div\n          css={css`\n            margin-right: 12px;\n            padding: 7px 0;\n            display: flex;\n            font-size: 22px;\n            opacity: 0.9;\n            color: rgb(3, 169, 244);\n          `}>\n          <MdInfoOutline />\n        </div>\n        <p\n          css={css`\n            margin: 8px 0;\n          `}>\n          You can change the language from the button on the top right corner on this page.<br />\n          改变语言 / 改變語言 / Changer de langue / Sprache ändern / Ganti BAHASA / 언어 변경 / Tukar bahasa / Mudar idioma /\n          Cambiar idioma / Thay đổi ngôn ngữ\n        </p>\n      </aside>\n    </div>\n  );\n};\n\n\nconst CameraConfirm = ({ canUseCamera, toggleCanUseCamera }: PropTypeCameraConfirm) => {\n  return (\n    <div\n      className=\"notice\"\n      css={css`\n        margin: 3rem 0;\n      `}\n    >\n      <h2\n        css={css`\n          position: relative;\n          overflow: hidden;\n          padding: 1.5rem 2rem 1.5rem 130px;\n          word-break: break-all;\n          border-top: 3px solid #000;\n          border-radius: 12px 0 0 0;\n\n          & > span {\n            font-size: 2rem;\n            position: absolute;\n            top: 0;\n            left: 0;\n            display: block;\n            padding: 3px 20px;\n            color: #fff;\n            border-radius: 10px 0 20px 10px;\n            background: #000;\n          }\n        `}\n      >\n        <span>01</span>\n        {locales.noticeTitle}\n      </h2>\n      <p>{locales.notice1}</p>\n      <p>{locales.notice2}</p>\n      <p>{locales.notice3}</p>\n      <p>{locales.notice4}</p>\n      <div\n        css={css`\n          margin: 1rem 0;\n          border-radius: 10px;\n          border: 0.3rem solid rgba(0, 0, 0, 0.7);\n          padding: 1rem;\n        `}\n      >\n        <ToggleSwitchWithLabel\n          checked={canUseCamera}\n          onChange={toggleCanUseCamera}\n          label={<span>{canUseCamera ? locales.noticeUseCamera : locales.noticeNoUseCamera}</span>}\n        />\n      </div>\n      <p>{locales.notice5a}\n        <b\n          css={css`\n            background: linear-gradient(transparent 50%, yellow);\n          `}\n        >{locales.notice5b}</b>\n        {locales.notice5c}\n      </p>\n      <p>{locales.notice6}</p>\n      <p>{locales.notice7}</p>\n    </div>\n  );\n};\n\n\nexport default ({ startPlaying, appStarted }: PropType) => {\n  const [songArr, setSongArr] = useState(songs);\n  const [canUseCamera, setCanUseCamera] = useState(true);\n  const [sequentialPlay, setSequentialPlay] = useState(false);\n  const [, setIsTouchDevice] = useState(false);\n  /**\n   * a dummy state; will be changed upon character selection\n   */\n  const [, setChara] = useState(Math.random());\n  const refRecordImages = [...new Array(6)].map(() => useRef<HTMLElement>());\n  const [playButtonShown, setPlayButtonShown] = useState(false);\n\n  const setSelectedSongs = (titles: SongTitle[]) => {\n    useStore.setState({\n      currentSongTitle: titles[0],\n      songsQueue: titles.slice(1),\n    });\n\n    if (useStore.getState().isTouchDevice) {\n      setIsTouchDevice(true);\n    } else {\n      startPlaying();\n    }\n  };\n\n  const toggleCanUseCamera = () => {\n    const canUse = !canUseCamera;\n    setCanUseCamera(canUse);\n    useStore.setState({ useCamera: canUse });\n  };\n\n  useEffect(() => {\n    /**\n     * A workaround for a bug that you cannot scroll on mobile browsers.\n     * Source: https://github.com/kutlugsahin/react-smooth-dnd/issues/75\n     */\n    const cleanClasses = () => document.body.className = \"\";\n    document.addEventListener(\"touchend\", cleanClasses, false);\n    return () => document.removeEventListener(\"touchend\", cleanClasses, false);\n  }, []);\n\n  return (\n    <div\n      className=\"container\"\n      css={css`\n        max-width: 1000px;\n        margin: auto;\n        padding: 1rem;\n        display: ${appStarted ? \"none\" : \"block\"};\n      `}\n    >\n\n      <Suspense fallback={null}>\n        <Title />\n\n        <Introduction />\n\n        <CameraConfirm canUseCamera={canUseCamera} toggleCanUseCamera={toggleCanUseCamera} />\n\n        <CharaSelector onCharaChanged={() => setChara(Math.random())} />\n\n        <SongSelector\n          songArr={songArr}\n          setSongArr={setSongArr}\n          sequential={sequentialPlay}\n          setSequential={setSequentialPlay}\n          setSelectedSongs={setSelectedSongs}\n          refs={refRecordImages}\n          playButtonShown={playButtonShown}\n          setPlayButtonShown={setPlayButtonShown}\n        />\n\n        <PlayButton onClick={startPlaying} playButtonShown={playButtonShown} />\n      </Suspense>\n    </div>\n  );\n};\n","import React, { ReactElement } from \"react\";\n/** @jsx jsx */\n// noinspection ES6UnusedImports\nimport { jsx, css } from \"@emotion/react\";\n\n\ninterface PropType {\n  id: string;\n  checked: boolean;\n  onChange: (event: React.ChangeEvent<any>) => void;\n}\n\ninterface PropTypeToggleWithLabel {\n  label: ReactElement | string | number;\n  checked: boolean;\n  onChange: (event: React.ChangeEvent<any>) => void;\n}\n\n\nexport const ToggleSwitchWithLabel = ({ checked, onChange, label }: PropTypeToggleWithLabel) => {\n  const randomChars = (digit = 4) => [...Array(digit)].map(() => \"0123456789abcdefghijklmnopqrstuvwxyz\"[Math.floor(Math.random() * 36)]).join(\"\");\n  const id = \"toggle-\" + randomChars(4);\n\n  return (\n    <div css={css`\n      display: grid;\n      grid-template-columns: 1fr auto;\n      cursor: pointer;\n\n      & > label {\n        cursor: pointer;\n      }\n    `}>\n      <label htmlFor={id}>{label}</label>\n      <ToggleSwitch id={id} checked={checked} onChange={onChange} />\n    </div>\n  );\n};\n\n\nexport const ToggleSwitch = ({ id, checked, onChange }: PropType) => {\n  return (\n    <div\n      className=\"toggle-switch\"\n      css={css`\n        display: inline-block;\n        width: 66px;\n        height: 30px;\n      `}\n    >\n      <input\n        type=\"checkbox\"\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        css={css`\n          display: none;\n\n          &:checked + label {\n            background-color: #4bd865;\n          }\n\n          &:checked + label:after {\n            left: 36px;\n          }\n        `}\n      />\n      <label\n        htmlFor={id}\n        css={css`\n          width: 60px;\n          height: 30px;\n          background: #ccc;\n          position: relative;\n          display: inline-block;\n          border-radius: 46px;\n          transition: 0.4s;\n          cursor: pointer;\n\n          &:after {\n            content: \"\";\n            position: absolute;\n            width: 30px;\n            height: 30px;\n            border-radius: 100%;\n            top: 0;\n            left: 0;\n            background: #fff;\n            box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);\n            transition: 0.2s;\n          }\n        `}\n      />\n    </div>\n  );\n};\n"],"names":["ExclusiveChoices","selectedIndex","choices","onChange","extraCss","css","map","choice","index","onClick","SongSelector","songArr","setSongArr","sequential","setSequential","setSelectedSongs","playButtonShown","setPlayButtonShown","className","locales","Container","dragHandleSelector","lockAxis","onDrop","result","removedIndex","addedIndex","setItems","prevItems","itemToAdd","splice","title","composer","thumbnailUrl","Draggable","SongGrid","clickHandler","slice","refImage","useRef","onMouseClickOnGrid","onMouseEnter","onMouseEnterOnGrid","onMouseLeave","onMouseLeaveOnGrid","ref","src","alt","draggable","current","isTouchDevice","isSongGridClicked","gsap","height","top","duration","ease","onComplete","to","set","width","left","query","bp","CharaSelector","onCharaChanged","name","selectedModelNames","includes","PlayButton","lazy","songs","sort","initialOrder","a","b","Title","Introduction","CameraConfirm","canUseCamera","toggleCanUseCamera","ToggleSwitch","checked","label","startPlaying","appStarted","useState","setCanUseCamera","sequentialPlay","setSequentialPlay","setIsTouchDevice","setChara","Math","random","refRecordImages","Array","useEffect","cleanClasses","document","body","addEventListener","removeEventListener","Suspense","fallback","canUse","useCamera","titles","currentSongTitle","songsQueue","refs","ToggleSwitchWithLabel","id","digit","floor","join","randomChars","htmlFor","type"],"sourceRoot":""}